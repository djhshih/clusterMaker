/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Wrte.java
 *
 * Created on Sep 29, 2009, 10:42:21 PM
 */

package clusterMaker.algorithms.autosome.fileio;



import java.io.*;
import java.awt.image.*;
import javax.imageio.*;
import java.util.*;
/**
 *
 * @author Aaron
 */
public class File_Write extends javax.swing.JFrame {

    /** Creates new form Wrte */
    public File_Write() {
         initComponents();
         javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/imgs/icon.jpg"));
         this.setIconImage(icon.getImage());
         if(graphics){
              jFileChooser1.setFileFilter(new ImageFileFilter());
         }else jFileChooser1.setFileFilter(new TextFileFilter());
        if(lastDir !=  null) jFileChooser1.setCurrentDirectory(lastDir);
      
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Save File");

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\"));
            jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
            jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jFileChooser1ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        if(evt.getActionCommand() == "ApproveSelection") {write(data, jFileChooser1.getSelectedFile().toString()); this.dispose();}
        if(evt.getActionCommand() == "CancelSelection") this.dispose();
}//GEN-LAST:event_jFileChooser1ActionPerformed

    
    public static void write(String data, String file) {

         if(graphics) {writeGraphics(file); lastDir = jFileChooser1.getCurrentDirectory(); return;}
         try{
            StringTokenizer st = new StringTokenizer(file,".");
            if(st.countTokens()>1) {
                String name = st.nextToken();
                String ext = st.nextToken();
                if(!ext.equals("txt")) file=name.concat(".txt");}
            else file=file.concat(".txt");
            out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(file)));
            out.writeBytes(data);
            out.close();
            lastFile = file;
         }catch(IOException err){}

         if(jFileChooser1 != null) lastDir = jFileChooser1.getCurrentDirectory();
     }


    public static void writeGraphics(String file){
        try{
            StringTokenizer st = new StringTokenizer(file,".");
            if(st.countTokens()>1) {
                String name = st.nextToken();
                String ext = st.nextToken();
                if(!ext.equals("png")) file=name.concat(".png");}
            else file=file.concat(".png");
            ImageIO.write(b, "png", new File(file));
        }catch(IOException e){}
        graphics = false;
    }


    public static String lastFile(){return lastFile;}
    /**
     * @param args the command line arguments
     */
    public static void start(String s, clusterMaker.algorithms.autosome.view.view2d.viewer2D vd) {
        data = s;
        v2d=vd;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                File_Write fw = new File_Write();
                fw.setLocationRelativeTo(v2d);                
                fw.setVisible(true);
            }
        });
    }

    public static void setFileName(String s){
        fileName=s;
    }

 public class ImageFileFilter extends javax.swing.filechooser.FileFilter
{
  private final String[] okFileExtensions =
    new String[] {"png"};

  public boolean accept(File file)
  {
    for (String extension : okFileExtensions)
    {
      if (file.getName().toLowerCase().endsWith(extension) || file.isDirectory())
      {
        return true;
      }
    }
    return false;
  }

  public String getDescription() {return "PNG (*.PNG)";}

}

  public class TextFileFilter extends javax.swing.filechooser.FileFilter
{
  private final String[] okFileExtensions =
    new String[] {"txt"};

  public boolean accept(File file)
  {
    for (String extension : okFileExtensions)
    {
      if (file.getName().toLowerCase().endsWith(extension) || file.isDirectory())
      {
        return true;
      }
    }
    return false;
  }

  public String getDescription() {return "TXT (*.txt)";}

}


    // End of variables declaration
    private static DataOutputStream out;
    private static String lastFile = "C:\\TRout.xls";
    private static String data;
    private static String fileName = new String();
    private static File lastDir;
    public static boolean graphics = false;
    public static BufferedImage b;
    private static clusterMaker.algorithms.autosome.view.view2d.viewer2D v2d;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables

}
